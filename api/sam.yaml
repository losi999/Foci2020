AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: 'Foci 2020 API'
Parameters: 
  FociLambdaRoleArn:
    Type: String
  FociTableName:
    Type: String
  FociTableStreamArn:
    Type: String

Globals:
  Api:
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"
  Function:
    Environment:
      Variables:
        DYNAMO_TABLE: !Ref FociTableName

Resources:
  FociApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
     
  CreateTeam:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist/create-team
      Handler: index.default
      Runtime: nodejs10.x
      Role: !Ref FociLambdaRoleArn
      Timeout: 10
      MemorySize: 512
      Tracing: Active
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref FociApi
            Path: /v1/teams
            Method: POST

  CreateTournament:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist/create-tournament
      Handler: index.default
      Runtime: nodejs10.x
      Role: !Ref FociLambdaRoleArn
      Timeout: 10
      MemorySize: 512
      Tracing: Active
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref FociApi
            Path: /v1/tournaments
            Method: POST    

  CreateMatch:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist/create-match
      Handler: index.default
      Runtime: nodejs10.x
      Role: !Ref FociLambdaRoleArn
      Timeout: 10
      MemorySize: 512
      Tracing: Active
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref FociApi
            Path: /v1/matches
            Method: POST   

  UpdateTournament:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist/update-tournament
      Handler: index.default
      Runtime: nodejs10.x
      Role: !Ref FociLambdaRoleArn
      Timeout: 10
      MemorySize: 512
      Tracing: Active
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref FociApi
            Path: /v1/tournaments/{tournamentId}
            Method: PUT    

  UpdateTeam:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist/update-team
      Handler: index.default
      Runtime: nodejs10.x
      Role: !Ref FociLambdaRoleArn
      Timeout: 10
      MemorySize: 512
      Tracing: Active
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref FociApi
            Path: /v1/teams/{teamId}
            Method: PUT    

  UpdateMatch:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist/update-match
      Handler: index.default
      Runtime: nodejs10.x
      Role: !Ref FociLambdaRoleArn
      Timeout: 10
      MemorySize: 512
      Tracing: Active
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref FociApi
            Path: /v1/matches/{matchId}
            Method: PUT    

  UpdateMatchWithTournament:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist/update-match-with-tournament
      Handler: index.default
      Runtime: nodejs10.x
      Role: !Ref FociLambdaRoleArn
      Timeout: 10
      MemorySize: 512
      Tracing: Active
      Events:
        DB:
          Type: DynamoDB
          Properties:
            Stream: !Ref FociTableStreamArn
            StartingPosition: TRIM_HORIZON

  UpdateMatchWithTeam:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist/update-match-with-team
      Handler: index.default
      Runtime: nodejs10.x
      Role: !Ref FociLambdaRoleArn
      Timeout: 10
      MemorySize: 512
      Tracing: Active
      Events:
        DB:
          Type: DynamoDB
          Properties:
            Stream: !Ref FociTableStreamArn
            StartingPosition: TRIM_HORIZON            

  ListMatches:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist/list-matches
      Handler: index.default
      Runtime: nodejs10.x
      Role: !Ref FociLambdaRoleArn
      Timeout: 10
      MemorySize: 512
      Tracing: Active
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref FociApi
            Path: /v1/matches
            Method: GET     

  ListTeams:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist/list-teams
      Handler: index.default
      Runtime: nodejs10.x
      Role: !Ref FociLambdaRoleArn
      Timeout: 10
      MemorySize: 512
      Tracing: Active
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref FociApi
            Path: /v1/teams
            Method: GET                                    

  ListTournaments:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist/list-tournaments
      Handler: index.default
      Runtime: nodejs10.x
      Role: !Ref FociLambdaRoleArn
      Timeout: 10
      MemorySize: 512
      Tracing: Active
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref FociApi
            Path: /v1/tournaments
            Method: GET    

  GetTeam:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist/get-team
      Handler: index.default
      Runtime: nodejs10.x
      Role: !Ref FociLambdaRoleArn
      Timeout: 10
      MemorySize: 512
      Tracing: Active
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref FociApi
            Path: /v1/teams/{teamId}
            Method: GET  

Outputs:
  FociApi:
    Description: "Foci 2020 API"
    Value: !Sub "https://${FociApi}.execute-api.${AWS::Region}.amazonaws.com/${FociApi.Stage}/"