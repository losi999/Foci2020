AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  Env:
    Type: String

Resources:
  Database:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: documentType-id
          AttributeType: S
        - AttributeName: segment
          AttributeType: S
        - AttributeName: documentType
          AttributeType: S
        - AttributeName: tournamentId
          AttributeType: S
        - AttributeName: teamId
          AttributeType: S
        - AttributeName: matchId
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
        - AttributeName: orderingValue
          AttributeType: S
      KeySchema:
        - AttributeName: documentType-id
          KeyType: HASH
        - AttributeName: segment
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: indexByTournamentId
          KeySchema:
            - AttributeName: tournamentId
              KeyType: HASH
            - AttributeName: documentType
              KeyType: RANGE
          Projection:
            ProjectionType: INCLUDE
            NonKeyAttributes:
              - matchId
        - IndexName: indexByTeamId
          KeySchema:
            - AttributeName: teamId
              KeyType: HASH
            - AttributeName: documentType
              KeyType: RANGE
          Projection:
            ProjectionType: INCLUDE
            NonKeyAttributes:
              - matchId
        - IndexName: indexByMatchId
          KeySchema:
            - AttributeName: matchId
              KeyType: HASH
            - AttributeName: documentType
              KeyType: RANGE
          Projection:
            ProjectionType: KEYS_ONLY
        - IndexName: indexByUserId
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: documentType
              KeyType: RANGE
          Projection:
            ProjectionType: KEYS_ONLY
        - IndexName: indexByDocumentType
          KeySchema:
            - AttributeName: documentType
              KeyType: HASH
            - AttributeName: orderingValue
              KeyType: RANGE
          Projection:
            ProjectionType: ALL                  

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Action:
            - sts:AssumeRole
          Principal:
            Service:
              - lambda.amazonaws.com
      Policies:
        - PolicyName: LambdaPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:DeleteItem
                  - dynamodb:PutItem
                  - dynamodb:Query
                  - dynamodb:UpdateItem
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:CreateLogGroup
                  - sns:Publish
                  - xray:*
                Resource: '*'

  DeleteTeamTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub Foci2020-${Env}-DeleteTeamTopic

  DeleteTournamentTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub Foci2020-${Env}-DeleteTournamentTopic
  
  UpdateTeamTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub Foci2020-${Env}-UpdateTeamTopic

  UpdateTournamentTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub Foci2020-${Env}-UpdateTournamentTopic

  UserPool:
    Type: AWS::Cognito::UserPool
    Properties: 
      AliasAttributes:
        - preferred_username
      AutoVerifiedAttributes: 
        - email
      Policies: 
        PasswordPolicy: 
          MinimumLength: 6
          TemporaryPasswordValidityDays: 45
      Schema: 
        - Name: nickname
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: true
          StringAttributeConstraints: 
            MinLength: "0"
            MaxLength: "2048"
        - Name: email
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: true
          StringAttributeConstraints: 
            MinLength: "0"
            MaxLength: "2048"                        
      UserPoolName: !Sub Foci2020-${Env}
      VerificationMessageTemplate: 
        EmailMessage: '{####}'
        DefaultEmailOption: CONFIRM_WITH_CODE
  ApplicationClient:
    Type: AWS::Cognito::UserPoolClient
    Properties: 
      ClientName: !Sub Foci2020-${Env}-Application
      ExplicitAuthFlows: 
        - USER_PASSWORD_AUTH
      GenerateSecret: false
      ReadAttributes: 
        - nickname
        - email
      UserPoolId: !Ref UserPool
      WriteAttributes: 
        - nickname
        - email
  AdminUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      UserPoolId: !Ref UserPool
      GroupName: admin
  PlayerUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      UserPoolId: !Ref UserPool
      GroupName: player
  AdminUser:
    Type: AWS::Cognito::UserPoolUser
    Properties:
      UserPoolId: !Ref UserPool
      Username: losi999
      UserAttributes:
        - Name: email
          Value: losonczil@gmail.com
        - Name: nickname
          Value: Losi
  AdminUserToAdminGroup:
    Type: AWS::Cognito::UserPoolUserToGroupAttachment
    DependsOn: AdminUser
    Properties:
      GroupName: admin
      UserPoolId: !Ref UserPool
      Username: losi999
  AdminUserToPlayerGroup:
    Type: AWS::Cognito::UserPoolUserToGroupAttachment
    DependsOn: AdminUser
    Properties:
      GroupName: player
      UserPoolId: !Ref UserPool
      Username: losi999

Outputs:
  Database:
    Value: !Ref Database
  LambdaRoleArn:
    Value: !GetAtt LambdaRole.Arn
  DeleteTeamTopic:
    Value: !Ref DeleteTeamTopic
  DeleteTournamentTopic:
    Value: !Ref DeleteTournamentTopic
  UpdateTeamTopic:
    Value: !Ref UpdateTeamTopic
  UpdateTournamentTopic:
    Value: !Ref UpdateTournamentTopic