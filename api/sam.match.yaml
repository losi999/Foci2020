AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Foci 2020 Match API"
Parameters:
  LambdaRoleArn:
    Type: String
  Database:
    Type: String
  DatabaseStreamArn:
    Type: String
  UserPoolArn:
    Type: String
  Env:
    Type: String

Globals:
  Api:
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"
  Function:
    Handler: index.default
    Runtime: nodejs12.x
    Timeout: 10
    MemorySize: 512
    Tracing: Active
    Environment:
      Variables:
        DYNAMO_TABLE: !Ref Database

Resources:
  MatchApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub Foci2020-${Env}-Match
      StageName: Prod
      TracingEnabled: true
      Auth:
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !Ref UserPoolArn
      GatewayResponses:
        MISSING_AUTHENTICATION_TOKEN:
          StatusCode: 404
          ResponseTemplates:
            application/json: '{ "message": $context.error.messageString }'

  CreateMatch:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Foci2020-${Env}-CreateMatch
      CodeUri: ./dist/create-match
      Role: !Ref LambdaRoleArn
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref MatchApi
            Path: /match/v1/matches
            Method: POST
            Auth:
              Authorizer: CognitoAuthorizer

  PlaceBet:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Foci2020-${Env}-PlaceBet
      CodeUri: ./dist/place-bet
      Role: !Ref LambdaRoleArn
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref MatchApi
            Path: /match/v1/matches/{matchId}/bets
            Method: POST
            Auth:
              Authorizer: CognitoAuthorizer

  ListBetsOfMatch:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Foci2020-${Env}-ListBetsOfMatch
      CodeUri: ./dist/list-bets-of-match
      Role: !Ref LambdaRoleArn
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref MatchApi
            Path: /match/v1/matches/{matchId}/bets
            Method: GET
            Auth:
              Authorizer: CognitoAuthorizer

  UpdateMatch:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Foci2020-${Env}-UpdateMatch
      CodeUri: ./dist/update-match
      Role: !Ref LambdaRoleArn
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref MatchApi
            Path: /match/v1/matches/{matchId}
            Method: PUT
            Auth:
              Authorizer: CognitoAuthorizer

  ListMatches:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Foci2020-${Env}-ListMatches
      CodeUri: ./dist/list-matches
      Role: !Ref LambdaRoleArn
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref MatchApi
            Path: /match/v1/matches
            Method: GET
            Auth:
              Authorizer: CognitoAuthorizer

  GetMatch:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Foci2020-${Env}-GetMatch
      CodeUri: ./dist/get-match
      Role: !Ref LambdaRoleArn
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref MatchApi
            Path: /match/v1/matches/{matchId}
            Method: GET
            Auth:
              Authorizer: CognitoAuthorizer

  DeleteMatch:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Foci2020-${Env}-DeleteMatch
      CodeUri: ./dist/delete-match
      Role: !Ref LambdaRoleArn
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref MatchApi
            Path: /match/v1/matches/{matchId}
            Method: DELETE
            Auth:
              Authorizer: CognitoAuthorizer

  MatchRelatedDocument:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Foci2020-${Env}-MatchRelatedDocument
      CodeUri: ./dist/match-related-document
      Role: !Ref LambdaRoleArn
      Events:
        DynamoDB:
          Type: DynamoDB
          Properties:
            StartingPosition: LATEST
            Stream: !Ref DatabaseStreamArn
            Enabled: true
            MaximumRetryAttempts: 5
            BisectBatchOnFunctionError: true
            
Outputs:
  MatchApi:
    Description: "Foci 2020 Match API"
    Value: !Sub "${MatchApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}"
