AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  Env:
    Type: String
  TestUserPassword:
    Type: String
    Default: ""    

Resources:
  Infrastructure:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: infrastructure/cloudformation.yaml
      Parameters:
        Env: !Ref Env
        TestUserPassword: !Ref TestUserPassword

  Team:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: api/sam.team.yaml
      Parameters:
        LambdaRoleArn: !GetAtt Infrastructure.Outputs.LambdaRoleArn
        Database: !GetAtt Infrastructure.Outputs.Database
        TeamDeletedTopic: !GetAtt Infrastructure.Outputs.TeamDeletedTopic
        TeamUpdatedTopic: !GetAtt Infrastructure.Outputs.TeamUpdatedTopic
        UserPoolArn: !GetAtt Infrastructure.Outputs.UserPoolArn
        Env: !Ref Env

  Tournament:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: api/sam.tournament.yaml
      Parameters:
        LambdaRoleArn: !GetAtt Infrastructure.Outputs.LambdaRoleArn
        Database: !GetAtt Infrastructure.Outputs.Database
        TournamentDeletedTopic: !GetAtt Infrastructure.Outputs.TournamentDeletedTopic
        TournamentUpdatedTopic: !GetAtt Infrastructure.Outputs.TournamentUpdatedTopic
        UserPoolArn: !GetAtt Infrastructure.Outputs.UserPoolArn
        Env: !Ref Env

  Match:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: api/sam.match.yaml
      Parameters:
        LambdaRoleArn: !GetAtt Infrastructure.Outputs.LambdaRoleArn
        Database: !GetAtt Infrastructure.Outputs.Database
        TeamUpdatedTopic: !GetAtt Infrastructure.Outputs.TeamUpdatedTopic
        TournamentUpdatedTopic: !GetAtt Infrastructure.Outputs.TournamentUpdatedTopic
        TeamDeletedTopic: !GetAtt Infrastructure.Outputs.TeamDeletedTopic
        TournamentDeletedTopic: !GetAtt Infrastructure.Outputs.TournamentDeletedTopic
        UserPoolArn: !GetAtt Infrastructure.Outputs.UserPoolArn
        Env: !Ref Env

  User:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: api/sam.user.yaml
      Parameters:
        LambdaRoleArn: !GetAtt Infrastructure.Outputs.LambdaRoleArn
        UserPoolId: !GetAtt Infrastructure.Outputs.UserPoolId
        ClientId: !GetAtt Infrastructure.Outputs.ClientId
        Env: !Ref Env

  Api:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        PriceClass: PriceClass_100
        DefaultCacheBehavior:
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
            - PUT
            - PATCH
            - POST
            - DELETE
          MinTTL: 0
          MaxTTL: 0
          DefaultTTL: 0
          ForwardedValues:
            QueryString: true
          TargetOriginId: Team
        CacheBehaviors:
          - ForwardedValues:
              QueryString: true
              Headers:
                - Authorization
            PathPattern: /team/*
            TargetOriginId: Team
            ViewerProtocolPolicy: redirect-to-https
            MinTTL: 0
            MaxTTL: 0
            DefaultTTL: 0
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
          - ForwardedValues:
              QueryString: true
              Headers:
                - Authorization
            PathPattern: /match/*
            TargetOriginId: Match
            ViewerProtocolPolicy: redirect-to-https
            MinTTL: 0
            MaxTTL: 0
            DefaultTTL: 0
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
          - ForwardedValues:
              QueryString: true
              Headers:
                - Authorization
            PathPattern: /tournament/*
            TargetOriginId: Tournament
            ViewerProtocolPolicy: redirect-to-https
            MinTTL: 0
            MaxTTL: 0
            DefaultTTL: 0
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
          - ForwardedValues:
              QueryString: true
              Headers:
                - Authorization
            PathPattern: /user/*
            TargetOriginId: User
            ViewerProtocolPolicy: redirect-to-https
            MinTTL: 0
            MaxTTL: 0
            DefaultTTL: 0
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
        Origins:
          - DomainName: !GetAtt Team.Outputs.TeamApi
            OriginPath: /Prod
            Id: Team
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
          - DomainName: !GetAtt Match.Outputs.MatchApi
            OriginPath: /Prod
            Id: Match
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
          - DomainName: !GetAtt Tournament.Outputs.TournamentApi
            OriginPath: /Prod
            Id: Tournament
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
          - DomainName: !GetAtt User.Outputs.UserApi
            OriginPath: /Prod
            Id: User
            CustomOriginConfig:
              OriginProtocolPolicy: https-only

Outputs:
  FociApi:
    Description: "Foci 2020 API"
    Value: !Sub https://${Api.DomainName}
