AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Foci 2020 Functions"
Parameters:
  LambdaRoleArn:
    Type: String
  Database:
    Type: String
  DatabaseArchive:
    Type: String
  DatabaseStreamArn:
    Type: String
  UserPoolId:
    Type: String
  ClientId:
    Type: String
  Env:
    Type: String
  TestUserPassword:
    Type: String
    Default: ""

Conditions:
  ShouldCreateTestUsers: !Not [!Equals [!Ref TestUserPassword, ""]]

Globals:
  Function:
    Handler: index.default
    Runtime: nodejs12.x
    Timeout: 10
    MemorySize: 512
    Tracing: Active
    Environment:
      Variables:
        DYNAMO_TABLE: !Ref Database

Resources:
  PostDeploy:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Foci2020-${Env}-PostDeploy
      CodeUri: api/dist/post-deploy
      Role: !Ref LambdaRoleArn
      Environment:
        Variables:
          INFRASTRUCTURE_STACK: !Ref AWS::StackName

  CreateTestUsers:
    Type: AWS::Serverless::Function
    Condition: ShouldCreateTestUsers
    Properties:
      FunctionName: !Sub Foci2020-${Env}-CreateTestUsers
      CodeUri: api/dist/create-test-users
      Role: !Ref LambdaRoleArn
      Environment:
        Variables:
          USER_POOL_ID: !Ref UserPoolId
          CLIENT_ID: !Ref ClientId
          ADMIN_COUNT: "1"
          PLAYER_COUNT: "3"
          TEST_USER_PASSWORD: !Ref TestUserPassword

  PrimaryTableTrigger:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Foci2020-${Env}-PrimaryTableTrigger
      CodeUri: api/dist/primary-table-trigger
      Role: !Ref LambdaRoleArn
      Environment:
        Variables:
          ARCHIVE_DOCUMENT_LAMBDA: !Ref ArchiveDocument
          BET_RESULT_CALCULATED_LAMBDA: !Ref BetResultCalculated
          MATCH_DELETED_LAMBDA: !Ref MatchDeleted
          MATCH_FINAL_SCORE_UPDATED_LAMBDA: !Ref MatchFinalScoreUpdated
          TEAM_DELETED_LAMBDA: !Ref TeamDeleted
          TEAM_UPDATED_LAMBDA: !Ref TeamUpdated
          TOURNAMENT_DELETED_LAMBDA: !Ref TeamDeleted
          TOURNAMENT_UPDATED_LAMBDA: !Ref TournamentUpdated
      Events:
        DynamoDB:
          Type: DynamoDB
          Properties:
            StartingPosition: LATEST
            Stream: !Ref DatabaseStreamArn
            Enabled: true
            MaximumRetryAttempts: 5
            BisectBatchOnFunctionError: true

  ArchiveDocument:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Foci2020-${Env}-ArchiveDocument
      CodeUri: api/dist/archive-document
      Role: !Ref LambdaRoleArn
      Environment:
        Variables:
          ARCHIVE_TABLE: !Ref DatabaseArchive
      # DeadLetterQueue:
      EventInvokeConfig:
        MaximumRetryAttempts: 2

  BetResultCalculated:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Foci2020-${Env}-BetResultCalculated
      CodeUri: api/dist/bet-result-calculated
      Role: !Ref LambdaRoleArn
      # DeadLetterQueue:
      EventInvokeConfig:
        MaximumRetryAttempts: 2

  MatchDeleted:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Foci2020-${Env}-MatchDeleted
      CodeUri: api/dist/match-deleted
      Role: !Ref LambdaRoleArn
      # DeadLetterQueue:
      EventInvokeConfig:
        MaximumRetryAttempts: 2

  MatchFinalScoreUpdated:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Foci2020-${Env}-MatchFinalScoreUpdated
      CodeUri: api/dist/match-final-score-updated
      Role: !Ref LambdaRoleArn
      # DeadLetterQueue:
      EventInvokeConfig:
        MaximumRetryAttempts: 2

  TeamDeleted:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Foci2020-${Env}-TeamDeleted
      CodeUri: api/dist/team-deleted
      Role: !Ref LambdaRoleArn
      # DeadLetterQueue:
      EventInvokeConfig:
        MaximumRetryAttempts: 2

  TeamUpdated:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Foci2020-${Env}-TeamUpdated
      CodeUri: api/dist/team-updated
      Role: !Ref LambdaRoleArn
      # DeadLetterQueue:
      EventInvokeConfig:
        MaximumRetryAttempts: 2

  TeamDeleted:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Foci2020-${Env}-TeamDeleted
      CodeUri: api/dist/team-deleted
      Role: !Ref LambdaRoleArn
      # DeadLetterQueue:
      EventInvokeConfig:
        MaximumRetryAttempts: 2

  TournamentUpdated:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub Foci2020-${Env}-TournamentUpdated
      CodeUri: api/dist/tournament-updated
      Role: !Ref LambdaRoleArn
      # DeadLetterQueue:
      EventInvokeConfig:
        MaximumRetryAttempts: 2

Outputs:
  PostDeployCreateTestUsers:
    Value: !If [ShouldCreateTestUsers, !GetAtt CreateTestUsers.Arn, ""]
