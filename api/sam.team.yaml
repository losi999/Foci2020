AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: 'Foci 2020 Team Api'
Parameters: 
  FociLambdaRoleArn:
    Type: String
  FociTableName:
    Type: String
  FociDeleteTeamTopic:
    Type: String
  FociUpdateTeamTopic:
    Type: String

Globals:
  Function:
    Environment:
      Variables:
        DYNAMO_TABLE: !Ref FociTableName

Resources:
  FociTeamApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod

  CreateTeam:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist/create-team
      Handler: index.default
      Runtime: nodejs10.x
      Role: !Ref FociLambdaRoleArn
      Timeout: 10
      MemorySize: 512
      Tracing: Active
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref FociTeamApi
            Path: /team/v1/teams
            Method: POST

  UpdateTeam:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist/update-team
      Handler: index.default
      Runtime: nodejs10.x
      Role: !Ref FociLambdaRoleArn
      Timeout: 10
      MemorySize: 512
      Tracing: Active
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref FociTeamApi
            Path: /team/v1/teams/{teamId}
            Method: PUT    
      Environment:
        Variables:
          UPDATE_TEAM_TOPIC: !Ref FociUpdateTeamTopic

  ListTeams:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist/list-teams
      Handler: index.default
      Runtime: nodejs10.x
      Role: !Ref FociLambdaRoleArn
      Timeout: 10
      MemorySize: 512
      Tracing: Active
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref FociTeamApi
            Path: /team/v1/teams
            Method: GET                                    

  GetTeam:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist/get-team
      Handler: index.default
      Runtime: nodejs10.x
      Role: !Ref FociLambdaRoleArn
      Timeout: 10
      MemorySize: 512
      Tracing: Active
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref FociTeamApi
            Path: /team/v1/teams/{teamId}
            Method: GET  

  DeleteTeam:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist/delete-team
      Handler: index.default
      Runtime: nodejs10.x
      Role: !Ref FociLambdaRoleArn
      Timeout: 10
      MemorySize: 512
      Tracing: Active
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref FociTeamApi
            Path: /team/v1/teams/{teamId}
            Method: DELETE     
      Environment:
        Variables:
          DELETE_TEAM_TOPIC: !Ref FociDeleteTeamTopic                

  UpdateMatchWithTeam:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist/update-match-with-team
      Handler: index.default
      Runtime: nodejs10.x
      Role: !Ref FociLambdaRoleArn
      Timeout: 10
      MemorySize: 512
      Tracing: Active
      Events:
        SNS:
          Type: SNS
          Properties:
            Topic: !Ref FociUpdateTeamTopic

  DeleteMatchWithTeam:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist/delete-match-with-team
      Handler: index.default
      Runtime: nodejs10.x
      Role: !Ref FociLambdaRoleArn
      Timeout: 10
      MemorySize: 512
      Tracing: Active
      Events:
        SNS:
          Type: SNS
          Properties:
            Topic: !Ref FociDeleteTeamTopic    

Outputs:
  FociTeamApi:
    Description: "Foci 2020 Team API"
    Value: !Sub "${FociTeamApi}.execute-api.${AWS::Region}.amazonaws.com"