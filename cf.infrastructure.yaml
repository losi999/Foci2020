AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  Env:
    Type: String

Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub Foci2020-${Env}-LambdaRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Action:
            - sts:AssumeRole
          Principal:
            Service:
              - lambda.amazonaws.com
      Policies:
        - PolicyName: LambdaPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:DeleteItem
                  - dynamodb:PutItem
                  - dynamodb:Query
                  - dynamodb:UpdateItem
                  - dynamodb:GetItem
                  - dynamodb:GetRecords
                  - dynamodb:GetShardIterator
                  - dynamodb:DescribeStream
                  - dynamodb:ListStreams
                  - dynamodb:BatchWriteItem
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:CreateLogGroup
                  - sns:Publish
                  - xray:*
                  - cognito-idp:AdminCreateUser
                  - cognito-idp:AdminGetUser
                  - cognito-idp:AdminInitiateAuth
                  - cognito-idp:AdminAddUserToGroup
                  - cognito-idp:AdminSetUserPassword
                  - cloudformation:DescribeStacks
                  - lambda:InvokeFunction
                  - sqs:SendMessage
                Resource: "*"

  EventDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub Foci2020-${Env}-EventDeadLetterQueue
      MessageRetentionPeriod: 1209000

Outputs:
  LambdaRoleArn:
    Value: !GetAtt LambdaRole.Arn
  EventDeadLetterQueueArn:
    Value: !GetAtt EventDeadLetterQueue.Arn

